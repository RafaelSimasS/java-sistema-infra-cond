/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telacondominio;

import administacao.Adm;
import administacao.ListaAdministradores;
import infracao.Infracao;
import infracao.ListaInfracoes;
import morador.Morador;
import morador.ListaMoradores;
import multa.Multa;
import multa.ListaMultas;

import javax.swing.*;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.DefaultComboBoxModel;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.RoundRectangle2D;

/**
 *
 * @author leafar
 */
public class frmGeral extends javax.swing.JFrame {

    /**
     * Creates new form frmGeral
     */
    public frmGeral() {
        initComponents();
        Icon i = lblIconBemVindo.getIcon();
        ImageIcon icon = (ImageIcon) i;
        Image image = icon.getImage().getScaledInstance(lblIconBemVindo.getWidth(), lblIconBemVindo.getHeight(),
                Image.SCALE_SMOOTH);
        lblIconBemVindo.setIcon(new ImageIcon(image));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnCadastro = new javax.swing.JPanel();
        pnInicio = new javax.swing.JPanel();
        pnFormInicio = new javax.swing.JPanel();
        lblIconBemVindo = new javax.swing.JLabel();
        lblBemVindo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnCadastroMorador = new javax.swing.JPanel();
        pnFormMorador = new javax.swing.JPanel();
        btnCadastrarMorador = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        btnCancelarMorador = new javax.swing.JButton();
        txtTelefone = new javax.swing.JFormattedTextField();
        cbApartamento = new javax.swing.JComboBox<>();
        lblCPF = new javax.swing.JLabel();
        lblApartamento = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        btnRemoverMorador = new javax.swing.JButton();
        cbBloco = new javax.swing.JComboBox<>();
        lblBloco = new javax.swing.JLabel();
        lblCadastroMorador = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        pnCadastroAdm = new javax.swing.JPanel();
        pnFormAdm = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnCriar = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        btnRemoverAdm = new javax.swing.JButton();
        pasSenha = new javax.swing.JPasswordField();
        lblCadastroAdiministrador = new javax.swing.JLabel();
        pnCadastroMulta = new javax.swing.JPanel();
        pnFormMulta = new javax.swing.JPanel();
        lblValor = new javax.swing.JLabel();
        lblCadastroMulta = new javax.swing.JLabel();
        lblMorador = new javax.swing.JLabel();
        cbMoradores = new javax.swing.JComboBox<>();
        btnCadastrarMulta = new javax.swing.JButton();
        txtfData = new javax.swing.JFormattedTextField();
        cbInfracao = new javax.swing.JComboBox<>();
        lblInfracao = new javax.swing.JLabel();
        lblValorMulta = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        pnTabelaMultas = new javax.swing.JPanel();
        pnMultaTabelaForm = new javax.swing.JPanel();
        lblTabelaMultas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMultas = new javax.swing.JTable();
        pnCadastroInfracao = new javax.swing.JPanel();
        pnFormInfra = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbInfracao = new javax.swing.JTable();
        pnFormInfraFields = new javax.swing.JPanel();
        txtInfraNome = new javax.swing.JTextField();
        lblCadastroInfra = new javax.swing.JLabel();
        lblInfraNome = new javax.swing.JLabel();
        btnRemover1 = new javax.swing.JButton();
        btnAdicionarInfra = new javax.swing.JButton();
        txtInfraValor = new javax.swing.JTextField();
        lblInfraValor = new javax.swing.JLabel();
        menubarMenu = new javax.swing.JMenuBar();
        mInicio = new javax.swing.JMenu();
        mCadastros = new javax.swing.JMenu();
        mmCadastroMorador = new javax.swing.JMenuItem();
        mmCadastroAdministrador = new javax.swing.JMenuItem();
        mGereInfra = new javax.swing.JMenu();
        mmCadastrarInfração = new javax.swing.JMenuItem();
        mmCadastrarMulta = new javax.swing.JMenuItem();
        mmTabelaMultas = new javax.swing.JMenuItem();
        mSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu");
        setMinimumSize(new java.awt.Dimension(714, 345));
        setPreferredSize(new java.awt.Dimension(748, 385));
        setSize(new java.awt.Dimension(777, 485));

        pnCadastro.setLayout(new java.awt.CardLayout());

        pnInicio.setBackground(new java.awt.Color(112, 188, 207));

        pnFormInicio.setBackground(new java.awt.Color(112, 188, 207));

        lblIconBemVindo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sparq\\OneDrive\\Documentos\\NetBeansProjects\\sistemaInfraLp\\src\\main\\resources\\iconNome.png")); // NOI18N

        lblBemVindo.setFont(new java.awt.Font("Sitka Small", 0, 48)); // NOI18N
        lblBemVindo.setForeground(new java.awt.Color(255, 255, 255));
        lblBemVindo.setText("Bem-Vindo");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("©2023 Copyright: Rafael Simas e");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Edilson Marques");

        javax.swing.GroupLayout pnFormInicioLayout = new javax.swing.GroupLayout(pnFormInicio);
        pnFormInicio.setLayout(pnFormInicioLayout);
        pnFormInicioLayout.setHorizontalGroup(
            pnFormInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInicioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIconBemVindo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(pnFormInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(lblBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnFormInicioLayout.setVerticalGroup(
            pnFormInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInicioLayout.createSequentialGroup()
                .addComponent(lblIconBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnFormInicioLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(lblBemVindo)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnInicioLayout = new javax.swing.GroupLayout(pnInicio);
        pnInicio.setLayout(pnInicioLayout);
        pnInicioLayout.setHorizontalGroup(
            pnInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnInicioLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(pnFormInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        pnInicioLayout.setVerticalGroup(
            pnInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInicioLayout.createSequentialGroup()
                .addComponent(pnFormInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pnCadastro.add(pnInicio, "telaAdm");

        pnCadastroMorador.setBackground(new java.awt.Color(112, 188, 207));

        pnFormMorador.setBackground(new java.awt.Color(112, 188, 207));

        btnCadastrarMorador.setText("Cadastrar");
        btnCadastrarMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarMoradorActionPerformed(evt);
            }
        });

        btnCancelarMorador.setText("Cancelar");
        btnCancelarMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarMoradorActionPerformed(evt);
            }
        });

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("# ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cbApartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        lblCPF.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblCPF.setForeground(new java.awt.Color(255, 255, 255));
        lblCPF.setText("CPF");
        lblCPF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCPFMouseClicked(evt);
            }
        });

        lblApartamento.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblApartamento.setForeground(new java.awt.Color(255, 255, 255));
        lblApartamento.setText("Apartamento");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnRemoverMorador.setText("Remover Morador");
        btnRemoverMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverMoradorActionPerformed(evt);
            }
        });

        cbBloco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        lblBloco.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblBloco.setForeground(new java.awt.Color(255, 255, 255));
        lblBloco.setText("Bloco");

        lblCadastroMorador.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblCadastroMorador.setForeground(new java.awt.Color(255, 255, 255));
        lblCadastroMorador.setText("Cadastro de Morador");

        lblNome.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblNome.setForeground(new java.awt.Color(255, 255, 255));
        lblNome.setText("Nome");
        lblNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNomeMouseClicked(evt);
            }
        });

        lblTelefone.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblTelefone.setForeground(new java.awt.Color(255, 255, 255));
        lblTelefone.setText("Telefone");
        lblTelefone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTelefoneMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnFormMoradorLayout = new javax.swing.GroupLayout(pnFormMorador);
        pnFormMorador.setLayout(pnFormMoradorLayout);
        pnFormMoradorLayout.setHorizontalGroup(
            pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormMoradorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnFormMoradorLayout.createSequentialGroup()
                            .addComponent(btnRemoverMorador)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarMorador)
                            .addGap(18, 18, 18)
                            .addComponent(btnCadastrarMorador))
                        .addGroup(pnFormMoradorLayout.createSequentialGroup()
                            .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnFormMoradorLayout.createSequentialGroup()
                                    .addComponent(lblCPF)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnFormMoradorLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(lblNome)
                                    .addGap(38, 38, 38)))
                            .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnFormMoradorLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTelefone)
                                .addComponent(lblBloco))
                            .addGap(18, 18, 18)
                            .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnFormMoradorLayout.createSequentialGroup()
                                    .addComponent(cbBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(58, 58, 58)
                                    .addComponent(lblApartamento)
                                    .addGap(28, 28, 28)
                                    .addComponent(cbApartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnFormMoradorLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(lblCadastroMorador))))
        );
        pnFormMoradorLayout.setVerticalGroup(
            pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormMoradorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroMorador)
                .addGap(18, 18, 18)
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblApartamento)
                        .addComponent(cbApartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBloco)
                        .addComponent(cbBloco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(pnFormMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarMorador)
                    .addComponent(btnCancelarMorador)
                    .addComponent(btnRemoverMorador))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnCadastroMoradorLayout = new javax.swing.GroupLayout(pnCadastroMorador);
        pnCadastroMorador.setLayout(pnCadastroMoradorLayout);
        pnCadastroMoradorLayout.setHorizontalGroup(
            pnCadastroMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroMoradorLayout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(pnFormMorador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(215, 215, 215))
        );
        pnCadastroMoradorLayout.setVerticalGroup(
            pnCadastroMoradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroMoradorLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(pnFormMorador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pnCadastro.add(pnCadastroMorador, "telaMorador");

        pnCadastroAdm.setBackground(new java.awt.Color(112, 188, 207));

        pnFormAdm.setBackground(new java.awt.Color(112, 188, 207));

        lblUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setText("Usuário: ");

        lblSenha.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblSenha.setForeground(new java.awt.Color(255, 255, 255));
        lblSenha.setText("Senha:");

        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCriar.setText("Criar");
        btnCriar.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });

        btnRemoverAdm.setText("Remover Adimin");
        btnRemoverAdm.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnRemoverAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverAdmActionPerformed(evt);
            }
        });

        lblCadastroAdiministrador.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblCadastroAdiministrador.setForeground(new java.awt.Color(255, 255, 255));
        lblCadastroAdiministrador.setText("Cadastro de Adiministrador");

        javax.swing.GroupLayout pnFormAdmLayout = new javax.swing.GroupLayout(pnFormAdm);
        pnFormAdm.setLayout(pnFormAdmLayout);
        pnFormAdmLayout.setHorizontalGroup(
            pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormAdmLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFormAdmLayout.createSequentialGroup()
                        .addComponent(btnRemoverAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnFormAdmLayout.createSequentialGroup()
                        .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsuario)
                            .addComponent(lblSenha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuario)
                            .addComponent(pasSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnFormAdmLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lblCadastroAdiministrador)))
                .addContainerGap())
        );
        pnFormAdmLayout.setVerticalGroup(
            pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormAdmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroAdiministrador)
                .addGap(18, 18, 18)
                .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(pasSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(pnFormAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCriar)
                    .addComponent(btnCancelar)
                    .addComponent(btnRemoverAdm))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnCadastroAdmLayout = new javax.swing.GroupLayout(pnCadastroAdm);
        pnCadastroAdm.setLayout(pnCadastroAdmLayout);
        pnCadastroAdmLayout.setHorizontalGroup(
            pnCadastroAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroAdmLayout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addComponent(pnFormAdm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(173, 173, 173))
        );
        pnCadastroAdmLayout.setVerticalGroup(
            pnCadastroAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroAdmLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(pnFormAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pnCadastro.add(pnCadastroAdm, "card4");

        pnCadastroMulta.setBackground(new java.awt.Color(112, 188, 207));

        pnFormMulta.setBackground(new java.awt.Color(112, 188, 207));

        lblValor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        lblCadastroMulta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCadastroMulta.setForeground(new java.awt.Color(255, 255, 255));
        lblCadastroMulta.setText("Cadastro de Multa");

        lblMorador.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblMorador.setForeground(new java.awt.Color(255, 255, 255));
        lblMorador.setText("Morador");

        btnCadastrarMulta.setText("Cadastrar Multa");
        btnCadastrarMulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarMultaActionPerformed(evt);
            }
        });

        try {
            txtfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfDataActionPerformed(evt);
            }
        });

        cbInfracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbInfracaoActionPerformed(evt);
            }
        });

        lblInfracao.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblInfracao.setForeground(new java.awt.Color(255, 255, 255));
        lblInfracao.setText("Infração");

        lblValorMulta.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblValorMulta.setForeground(new java.awt.Color(255, 255, 255));
        lblValorMulta.setText("Valor da Multa");

        lblData.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblData.setForeground(new java.awt.Color(255, 255, 255));
        lblData.setText("Data");

        javax.swing.GroupLayout pnFormMultaLayout = new javax.swing.GroupLayout(pnFormMulta);
        pnFormMulta.setLayout(pnFormMultaLayout);
        pnFormMultaLayout.setHorizontalGroup(
            pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormMultaLayout.createSequentialGroup()
                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFormMultaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnFormMultaLayout.createSequentialGroup()
                                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbMoradores, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMorador)
                                    .addComponent(txtfData, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValorMulta)
                                    .addComponent(lblValor, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbInfracao, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblInfracao)))
                            .addGroup(pnFormMultaLayout.createSequentialGroup()
                                .addGap(222, 222, 222)
                                .addComponent(lblCadastroMulta))
                            .addComponent(lblData)))
                    .addGroup(pnFormMultaLayout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(btnCadastrarMulta)))
                .addContainerGap())
        );
        pnFormMultaLayout.setVerticalGroup(
            pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormMultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroMulta)
                .addGap(55, 55, 55)
                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMorador)
                    .addComponent(lblValorMulta)
                    .addComponent(lblInfracao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnFormMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbMoradores)
                    .addComponent(cbInfracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(lblData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCadastrarMulta)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnCadastroMultaLayout = new javax.swing.GroupLayout(pnCadastroMulta);
        pnCadastroMulta.setLayout(pnCadastroMultaLayout);
        pnCadastroMultaLayout.setHorizontalGroup(
            pnCadastroMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroMultaLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(pnFormMulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(48, 48, 48))
        );
        pnCadastroMultaLayout.setVerticalGroup(
            pnCadastroMultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroMultaLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(pnFormMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pnCadastro.add(pnCadastroMulta, "card5");

        pnTabelaMultas.setBackground(new java.awt.Color(112, 188, 207));

        pnMultaTabelaForm.setBackground(new java.awt.Color(112, 188, 207));

        lblTabelaMultas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTabelaMultas.setForeground(new java.awt.Color(255, 255, 255));
        lblTabelaMultas.setText("Tabela de Multas");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tbMultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbMultas);

        javax.swing.GroupLayout pnMultaTabelaFormLayout = new javax.swing.GroupLayout(pnMultaTabelaForm);
        pnMultaTabelaForm.setLayout(pnMultaTabelaFormLayout);
        pnMultaTabelaFormLayout.setHorizontalGroup(
            pnMultaTabelaFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMultaTabelaFormLayout.createSequentialGroup()
                .addGroup(pnMultaTabelaFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnMultaTabelaFormLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
                    .addGroup(pnMultaTabelaFormLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTabelaMultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        pnMultaTabelaFormLayout.setVerticalGroup(
            pnMultaTabelaFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMultaTabelaFormLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblTabelaMultas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnTabelaMultasLayout = new javax.swing.GroupLayout(pnTabelaMultas);
        pnTabelaMultas.setLayout(pnTabelaMultasLayout);
        pnTabelaMultasLayout.setHorizontalGroup(
            pnTabelaMultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTabelaMultasLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(pnMultaTabelaForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(58, 58, 58))
        );
        pnTabelaMultasLayout.setVerticalGroup(
            pnTabelaMultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTabelaMultasLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(pnMultaTabelaForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pnCadastro.add(pnTabelaMultas, "card6");

        pnCadastroInfracao.setBackground(new java.awt.Color(112, 188, 207));

        pnFormInfra.setBackground(new java.awt.Color(112, 188, 207));

        tbInfracao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Valor"
            }
        ));
        tbInfracao.setToolTipText("");
        jScrollPane3.setViewportView(tbInfracao);

        pnFormInfraFields.setBackground(new java.awt.Color(112, 188, 207));

        lblCadastroInfra.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblCadastroInfra.setForeground(new java.awt.Color(255, 255, 255));
        lblCadastroInfra.setText("Cadastro de Infrações");

        lblInfraNome.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblInfraNome.setForeground(new java.awt.Color(255, 255, 255));
        lblInfraNome.setText("Infração");

        btnRemover1.setText("Remover");
        btnRemover1.setMinimumSize(new java.awt.Dimension(714, 345));
        btnRemover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemover1ActionPerformed(evt);
            }
        });

        btnAdicionarInfra.setText("Adicionar");
        btnAdicionarInfra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarInfraActionPerformed(evt);
            }
        });

        lblInfraValor.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblInfraValor.setForeground(new java.awt.Color(255, 255, 255));
        lblInfraValor.setText("Valor");

        javax.swing.GroupLayout pnFormInfraFieldsLayout = new javax.swing.GroupLayout(pnFormInfraFields);
        pnFormInfraFields.setLayout(pnFormInfraFieldsLayout);
        pnFormInfraFieldsLayout.setHorizontalGroup(
            pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                        .addGroup(pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInfraNome)
                            .addComponent(txtInfraNome, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblInfraValor)
                            .addComponent(txtInfraValor, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnFormInfraFieldsLayout.createSequentialGroup()
                                .addComponent(btnRemover1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdicionarInfra))))
                    .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lblCadastroInfra)))
                .addContainerGap())
        );
        pnFormInfraFieldsLayout.setVerticalGroup(
            pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroInfra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                        .addComponent(lblInfraValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInfraValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnFormInfraFieldsLayout.createSequentialGroup()
                        .addComponent(lblInfraNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInfraNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnFormInfraFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarInfra)
                    .addComponent(btnRemover1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnFormInfraLayout = new javax.swing.GroupLayout(pnFormInfra);
        pnFormInfra.setLayout(pnFormInfraLayout);
        pnFormInfraLayout.setHorizontalGroup(
            pnFormInfraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInfraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(pnFormInfraLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(pnFormInfraFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        pnFormInfraLayout.setVerticalGroup(
            pnFormInfraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFormInfraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnFormInfraFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout pnCadastroInfracaoLayout = new javax.swing.GroupLayout(pnCadastroInfracao);
        pnCadastroInfracao.setLayout(pnCadastroInfracaoLayout);
        pnCadastroInfracaoLayout.setHorizontalGroup(
            pnCadastroInfracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCadastroInfracaoLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(pnFormInfra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(79, 79, 79))
        );
        pnCadastroInfracaoLayout.setVerticalGroup(
            pnCadastroInfracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastroInfracaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnFormInfra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pnCadastro.add(pnCadastroInfracao, "card7");

        mInicio.setText("Início");
        mInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mInicioMouseClicked(evt);
            }
        });
        menubarMenu.add(mInicio);

        mCadastros.setBackground(new java.awt.Color(224, 223, 246));
        mCadastros.setBorder(mSair.getBorder());
        mCadastros.setText("Cadastro");

        mmCadastroMorador.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mmCadastroMorador.setText("Morador");
        mmCadastroMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmCadastroMoradorActionPerformed(evt);
            }
        });
        mCadastros.add(mmCadastroMorador);

        mmCadastroAdministrador.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mmCadastroAdministrador.setText("Administrador");
        mmCadastroAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmCadastroAdministradorActionPerformed(evt);
            }
        });
        mCadastros.add(mmCadastroAdministrador);

        menubarMenu.add(mCadastros);

        mGereInfra.setText("Gerenciamento de Infrações/Multas");

        mmCadastrarInfração.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mmCadastrarInfração.setText("Cadastrar Infração");
        mmCadastrarInfração.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmCadastrarInfraçãoActionPerformed(evt);
            }
        });
        mGereInfra.add(mmCadastrarInfração);

        mmCadastrarMulta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mmCadastrarMulta.setText("Cadastrar Multa");
        mmCadastrarMulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmCadastrarMultaActionPerformed(evt);
            }
        });
        mGereInfra.add(mmCadastrarMulta);

        mmTabelaMultas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mmTabelaMultas.setText("Tabela de Multas");
        mmTabelaMultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmTabelaMultasActionPerformed(evt);
            }
        });
        mGereInfra.add(mmTabelaMultas);

        menubarMenu.add(mGereInfra);

        mSair.setText("Sair");
        mSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mSairMouseClicked(evt);
            }
        });
        menubarMenu.add(mSair);

        setJMenuBar(menubarMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public class RoundedButton extends JButton {
        @Override
        protected void paintComponent(Graphics g) {
            // Cria um objeto de formato redondo para as bordas do botão
            Shape border = new RoundRectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1, 20, 20);

            Graphics2D g2 = (Graphics2D) g;
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2.setColor(getBackground());
            g2.fill(border);

            super.paintComponent(g);
        }
    }

    private boolean checarCampoVazioOuInvalido(String campo) {
        // checa se o campo em questão comecça com o caractere espaço em branco ou se
        // está vazio
        return campo.equals("") || campo.startsWith(" ");
    }

    private boolean checarLimpoMorador() {
        // Checa se os campos da tela de cadastro de moradores estão limpos
        String nome = txtNome.getText();
        String cpf = txtCPF.getText();
        String telefone = txtTelefone.getText();
        return checarCampoVazioOuInvalido(cpf) &&
                checarCampoVazioOuInvalido(nome) &&
                checarCampoVazioOuInvalido(telefone);
    }

    private boolean checarLimpoAdm() {
        // Checa se os campos Usuario e Senha da Tela de cadastro de Admins estão limpos
        String nome = txtUsuario.getText();
        String password = new String(pasSenha.getPassword());
        return checarCampoVazioOuInvalido(password) && checarCampoVazioOuInvalido(nome);
    }

    private void limpaCamposAdm() {
        txtUsuario.setText("");
        pasSenha.setText("");
    }

    private void limpaCamposMorador() {
        txtNome.setText("");
        txtCPF.setText("");
        txtCPF.setValue(null);
        txtTelefone.setText("");
        txtTelefone.setValue(null);

    }

    private void limpaCamposInfracao() {
        txtInfraNome.setText("");
        txtInfraValor.setText("");
    }

    private void limpaCamposGeral() {
        limpaCamposAdm();
        limpaCamposMorador();
    }

    private void mmCadastroMoradorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mmCadastroMoradorActionPerformed
        if (checarLimpoAdm()) {
            pnCadastro.removeAll();
            pnCadastro.add(pnCadastroMorador);
            pnCadastro.repaint();
            pnCadastro.revalidate();
        } else {
            int flag = JOptionPane.showConfirmDialog(null,
                    "Certeza que quer sair?\nUm ou mais campos contém alteração!", "Campo alterado.",
                    JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposAdm();
                pnCadastro.removeAll();
                pnCadastro.add(pnCadastroMorador);
                pnCadastro.repaint();
                pnCadastro.revalidate();
            } else {
                txtUsuario.requestFocus();
            }
        }
    }// GEN-LAST:event_mmCadastroMoradorActionPerformed

    private void mmCadastroAdministradorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mmCadastroAdministradorActionPerformed
        // TODO add your handling code here:
        if (checarLimpoMorador()) {
            pnCadastro.removeAll();
            pnCadastro.add(pnCadastroAdm);
            pnCadastro.repaint();
            pnCadastro.revalidate();
        } else {
            int flag = JOptionPane.showConfirmDialog(null,
                    "Certeza que quer sair?\nUm ou mais campos contém alteração!", "Campo alterado.",
                    JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposMorador();
                pnCadastro.removeAll();
                pnCadastro.add(pnCadastroAdm);
                pnCadastro.repaint();
                pnCadastro.revalidate();
            } else {
                txtNome.requestFocus();
            }
        }

    }// GEN-LAST:event_mmCadastroAdministradorActionPerformed

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCriarActionPerformed
        // TODO add your handling code here:
        String usuario = txtUsuario.getText();
        String password = new String(pasSenha.getPassword());

        if (checarCampoVazioOuInvalido(usuario) ||
                checarCampoVazioOuInvalido(password)) {
            JOptionPane.showMessageDialog(null, "Um dos campos está vazio!", "Campo vazio", HEIGHT);
            txtUsuario.requestFocus();
        } else {
            int flag = JOptionPane.showConfirmDialog(null,
                    "Deseja realmente criar este usuário?\nUsuário: " + usuario + ".", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                Adm novoAdm = new Adm(usuario, password);
                ListaAdministradores listaAdms = new ListaAdministradores();
                if (listaAdms.adicionarAdministrador(novoAdm)) {
                    JOptionPane.showMessageDialog(null, "Um novo adiministrador foi adicionado!",
                            "Adiministrador criado.", JOptionPane.INFORMATION_MESSAGE);
                    limpaCamposAdm();
                    txtUsuario.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Já existe um adiministrador com este nome!",
                            "Cadastro Inválido", HEIGHT);
                    limpaCamposAdm();
                    txtUsuario.requestFocus();
                }
            } else {
                limpaCamposAdm();
                txtUsuario.requestFocus();
            }
        }

    }// GEN-LAST:event_btnCriarActionPerformed

    private void mSairMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_mSairMouseClicked
        // TODO add your handling code here:
        if (!checarLimpoAdm()) {
            int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?\nHá alterações em um dos campos.",
                    "Cancelar cadastro", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposAdm();
                frmLogin frameLogin = new frmLogin();
                frameLogin.setVisible(true);
                this.dispose();
            } else {
                txtUsuario.requestFocus();
            }

        } else if (!checarLimpoMorador()) {
            int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?\nHá alterações em um dos campos.",
                    "Cancelar cadastro", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposMorador();
                frmLogin frameLogin = new frmLogin();
                frameLogin.setVisible(true);
                this.dispose();
            } else {
                txtNome.requestFocus();
            }
        } else {
            frmLogin frameLogin = new frmLogin();
            frameLogin.setVisible(true);
            this.dispose();
        }
    }// GEN-LAST:event_mSairMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        int flag = JOptionPane.showConfirmDialog(null, "Deseja cancelar o cadastro?", "Cancelar cadastro",
                JOptionPane.YES_NO_OPTION);
        if (flag == JOptionPane.YES_OPTION) {
            limpaCamposAdm();
            pnCadastro.removeAll();
            pnCadastro.add(pnInicio);
            pnCadastro.repaint();
            pnCadastro.revalidate();
        } else {
            txtUsuario.requestFocus();
        }
    }// GEN-LAST:event_btnCancelarActionPerformed

    private void lblNomeMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lblNomeMouseClicked
        // TODO add your handling code here:
        txtNome.requestFocus();
    }// GEN-LAST:event_lblNomeMouseClicked

    private void lblCPFMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lblCPFMouseClicked
        // TODO add your handling code here:
        txtCPF.requestFocus();
    }// GEN-LAST:event_lblCPFMouseClicked

    private void lblTelefoneMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lblTelefoneMouseClicked
        // TODO add your handling code here:
        txtTelefone.requestFocus();
    }// GEN-LAST:event_lblTelefoneMouseClicked

    private void btnCadastrarMoradorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCadastrarMoradorActionPerformed
        // TODO add your handling code here:
        String nome = txtNome.getText();
        String cpf = txtCPF.getText();
        String tele = txtTelefone.getText();
        int bloco = Integer.parseInt(cbBloco.getSelectedItem().toString());
        int numAp = Integer.parseInt(cbApartamento.getSelectedItem().toString());
        if (checarCampoVazioOuInvalido(cpf) ||
                checarCampoVazioOuInvalido(nome) ||
                checarCampoVazioOuInvalido(tele)) {
            JOptionPane.showMessageDialog(null, "Um dos campos está vazio!", "Campo vazio", HEIGHT);
            txtNome.requestFocus();
        } else {
            int flag = JOptionPane.showConfirmDialog(null,
                    "Deseja realmente cadastrar esse morador?\nMorador: " + nome + "\nCPF: " + cpf + "\nTelefone: "
                            + tele + ".",
                    "Confirmação", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                Morador novoMorador = new Morador(nome, tele, cpf, bloco, numAp);
                ListaMoradores listaMoradoresInc = new ListaMoradores();
                if (listaMoradoresInc.adicionarMorador(novoMorador)) {
                    JOptionPane.showMessageDialog(null, "Morador cadastrado com sucesso!",
                            "Morador Cadastrado.", JOptionPane.INFORMATION_MESSAGE);
                    limpaCamposMorador();
                    txtNome.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Já existe um morador no mesmo apartamento ou com mesma informações cadastradas!",
                            "Cadastro Inválido", HEIGHT);
                    limpaCamposMorador();
                    txtNome.requestFocus();
                }
            } else {
                limpaCamposMorador();
                txtNome.requestFocus();
            }
        }

    }// GEN-LAST:event_btnCadastrarMoradorActionPerformed

    private void mInicioMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_mInicioMouseClicked
        // TODO add your handling code here:
        if (!checarLimpoAdm()) {
            int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?\nHá alterações em um dos campos.",
                    "Cancelar cadastro", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposAdm();
                pnCadastro.removeAll();
                pnCadastro.add(pnInicio);
                pnCadastro.repaint();
                pnCadastro.revalidate();
            } else {
                txtUsuario.requestFocus();
            }

        } else if (!checarLimpoMorador()) {
            int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?\nHá alterações em um dos campos.",
                    "Cancelar cadastro", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposMorador();
                pnCadastro.removeAll();
                pnCadastro.add(pnInicio);
                pnCadastro.repaint();
                pnCadastro.revalidate();
            } else {
                txtNome.requestFocus();
            }
        } else {
            pnCadastro.removeAll();
            pnCadastro.add(pnInicio);
            pnCadastro.repaint();
            pnCadastro.revalidate();
        }
    }// GEN-LAST:event_mInicioMouseClicked

    private void carregaCbBoxesMultas() {
        ListaMoradores listaMoradores = new ListaMoradores();
        List<Morador> moradores = listaMoradores.getMoradores();

        ListaInfracoes listaInfracoes = new ListaInfracoes();
        List<Infracao> infracoes = listaInfracoes.getInfracoes();

        DefaultComboBoxModel<String> comboBoxModelMoradores = new DefaultComboBoxModel<>();
        for (Morador morador : moradores) {
            String nomeCpf = morador.getNome() + "(" + morador.getCpf() + ")";
            comboBoxModelMoradores.addElement(nomeCpf); // Adiciona no cb o nome dos moradores com CPF
        }
        cbMoradores.setModel(comboBoxModelMoradores);

        DefaultComboBoxModel<String> comboBoxModelInfracoes = new DefaultComboBoxModel<>();
        for (Infracao infracao : infracoes) {
            comboBoxModelInfracoes.addElement(infracao.getNomeInfracao());
        }
        cbInfracao.setModel(comboBoxModelInfracoes);
    }

    private void mmCadastrarMultaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mmCadastrarMultaActionPerformed
        // TODO add your handling code here:
        if (checarLimpoAdm() && checarLimpoMorador()) { // Checa se as outras telas estão limpas para poder mudar

            carregaCbBoxesMultas();
            pnCadastro.removeAll();
            pnCadastro.add(pnCadastroMulta);
            pnCadastro.repaint();
            pnCadastro.revalidate();

        } else {
            int flag = JOptionPane.showConfirmDialog(null,
                    "Deseja realmente sair?\nHá alterações em um ou mais dos campos.",
                    "Cancelar cadastro", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                limpaCamposGeral();
                carregaCbBoxesMultas();
                pnCadastro.removeAll();
                pnCadastro.add(pnCadastroMulta);
                pnCadastro.repaint();
                pnCadastro.revalidate();
            }
        }
    }// GEN-LAST:event_mmCadastrarMultaActionPerformed

    private void cbInfracaoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbInfracaoActionPerformed
        // TODO add your handling code here:
        // Atualiza o valor da multa de acordo com o tipo de infração selecionada
        String infracaoSelecionada = (String) cbInfracao.getSelectedItem();
        ListaInfracoes listaInfracoes = new ListaInfracoes();
        List<Infracao> infracoes = listaInfracoes.getInfracoes();
        for (Infracao infracao : infracoes) {
            if (infracao.getNomeInfracao().equals(infracaoSelecionada)) {
                double valor = infracao.getValor();
                lblValor.setText(String.valueOf(valor));
                break;
            }
        }
    }// GEN-LAST:event_cbInfracaoActionPerformed

    private boolean dataIncorreta(String data) {
        String[] partesData = data.split("/");
        if (partesData.length != 3) {
            return false;
        }
        int diaInt;
        int mesInt;
        int anoInt;
        String dia = partesData[0];
        String mes = partesData[1];
        String ano = partesData[2];
        if (dia.isEmpty() || mes.isEmpty() || ano.isEmpty()) {
            // Alguma das partes da data está vazia
            return true;
        }
        // Verificar se as partes da data são incompletas
        if (dia.equals("00") || mes.equals("00") || ano.equals("0000")) {
            return true;
        }

        // Verificar se as partes da data são válidas
        try {
            diaInt = Integer.parseInt(dia);
            mesInt = Integer.parseInt(mes);
            anoInt = Integer.parseInt(ano);

        } catch (NumberFormatException e) {
            return true;
        }

        if (diaInt < 1 || diaInt > 31 || mesInt < 1 || mesInt > 12 || anoInt < 1) {
            return true;
        }
        return false;

    }

    private void btnCadastrarMultaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCadastrarMultaActionPerformed
        // TODO add your handling code here:
        String nomeCpfSelecionado = (String) cbMoradores.getSelectedItem();
        String nomeInfracaoSelecionada = (String) cbInfracao.getSelectedItem();
        String valor = lblValor.getText();
        String data = txtfData.getText();
        try {
            String nome = nomeCpfSelecionado.substring(0, nomeCpfSelecionado.indexOf("("));
            String cpf = nomeCpfSelecionado.substring(nomeCpfSelecionado.indexOf("(") + 1,
                    nomeCpfSelecionado.indexOf(")"));

            Morador moradorSelecionado = null;
            Infracao infracaoSelecionada = null;

            int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente cadastrar a seguinte multa?\nMorador: "
                    + nome + ".\nInfração: " + nomeInfracaoSelecionada +
                    ".\nValor: R$" + valor + ".\nData: " + data,
                    "Confirmação", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                if (dataIncorreta(data)) {
                    JOptionPane.showMessageDialog(null, "Data Inválida.", "Erro de data", JOptionPane.ERROR_MESSAGE);
                    txtfData.requestFocus();
                } else {
                    ListaMoradores listaMoradores = new ListaMoradores();
                    List<Morador> moradores = listaMoradores.getMoradores();

                    ListaInfracoes listaInfracoes = new ListaInfracoes();
                    List<Infracao> infracoes = listaInfracoes.getInfracoes();
                    ListaMultas listaMultas = new ListaMultas();

                    for (Morador morador : moradores) {
                        if (morador.getNome().equals(nome) && morador.getCpf().equals(cpf)) {
                            moradorSelecionado = morador;
                            break;
                        }
                    }
                    for (Infracao infracao : infracoes) {
                        if (infracao.getNomeInfracao().equals(nomeInfracaoSelecionada)) {
                            infracaoSelecionada = infracao;
                            break;
                        }
                    }
                    if (moradorSelecionado != null && infracaoSelecionada != null) {
                        Multa novaMulta = new Multa(moradorSelecionado, infracaoSelecionada, data);
                        try {
                            listaMultas.adicionarMulta(novaMulta);
                            JOptionPane.showMessageDialog(null, "Multa cadastrada com sucesso!",
                                    "Multa Cadastrada.", JOptionPane.INFORMATION_MESSAGE);
                            txtfData.setText("");
                            txtfData.setValue(null);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar a multa.\n"
                                    + "Morador ou Infração não foi encontrado.",
                                    "Erro Interno", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Não foi possível cadastrar a multa.\n"
                                + "Morador ou Infração não foi encontrado.",
                                "Erro ao cadastrar", JOptionPane.ERROR_MESSAGE);
                    }

                }
            } else {
                txtfData.setText("");
                txtfData.setValue(null);

            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Há campos vazios.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnCadastrarMultaActionPerformed

    private void txtfDataActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtfDataActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtfDataActionPerformed

    private void btnCancelarMoradorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelarMoradorActionPerformed
        // TODO add your handling code here:
        int flag = JOptionPane.showConfirmDialog(null, "Deseja cancelar o cadastro?", "Cancelar cadastro",
                JOptionPane.YES_NO_OPTION);
        if (flag == JOptionPane.YES_OPTION) {
            limpaCamposMorador();
            pnCadastro.removeAll();
            pnCadastro.add(pnInicio);
            pnCadastro.repaint();
            pnCadastro.revalidate();
        } else {
            txtNome.requestFocus();
        }
    }// GEN-LAST:event_btnCancelarMoradorActionPerformed

    private void btnRemoverMoradorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemoverMoradorActionPerformed
        // TODO add your handling code here:
        frmRemoveMorador frameRemoveMorador = new frmRemoveMorador();
        frameRemoveMorador.carregaMoradoresNaTabela();
        frameRemoveMorador.setVisible(true);
    }// GEN-LAST:event_btnRemoverMoradorActionPerformed

    private void btnRemoverAdmActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemoverAdmActionPerformed
        // TODO add your handling code here:
        frmRemoverAdiministrador frameRemoverAdm = new frmRemoverAdiministrador();
        frameRemoverAdm.carregaCbBoxesRemoverAdimin();
        frameRemoverAdm.setVisible(true);
    }// GEN-LAST:event_btnRemoverAdmActionPerformed

    private void carregaMultasNaTabela() {

        ListaMultas listaMultas = new ListaMultas();
        // Define um coluna para a tabela
        String[] colunas = { "Nome", "CPF", "Bloco", "Apartamento", "Infração", "Valor", "Data" };

        DefaultTableModel tableModel = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        List<Multa> multas = listaMultas.getMultas();
        for (Multa multa : multas) {
            Morador cliente = multa.getCliente();
            Infracao infracao = multa.getInfracao();
            Object[] rowData = {
                    cliente.getNome(),
                    cliente.getCpf(),
                    cliente.getBloco(),
                    cliente.getNumAp(),
                    infracao.getNomeInfracao(),
                    infracao.getValor(),
                    multa.getData()
            };
            tableModel.addRow(rowData);
        }
        tbMultas.setModel(tableModel);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);
        tbMultas.setRowSorter(sorter);

    }

    private void mmTabelaMultasActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mmTabelaMultasActionPerformed
        // TODO add your handling code here:
        carregaMultasNaTabela();
        pnCadastro.removeAll();
        pnCadastro.add(pnTabelaMultas);
        pnCadastro.repaint();
        pnCadastro.revalidate();

    }// GEN-LAST:event_mmTabelaMultasActionPerformed

    private void carregarInfracoesTabela() {
        ListaInfracoes listaInfracoes = new ListaInfracoes();
        // Define um coluna para a tabela
        String[] colunas = { "Nome", "Valor" };

        DefaultTableModel tableModel = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        List<Infracao> infracoes = listaInfracoes.getInfracoes();
        for (Infracao infracao : infracoes) {

            Object[] rowData = {
                    infracao.getNomeInfracao(),
                    infracao.getValor()

            };
            tableModel.addRow(rowData);
        }
        tbInfracao.setModel(tableModel);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);
        tbInfracao.setRowSorter(sorter);
    }

    private void mmCadastrarInfraçãoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mmCadastrarInfraçãoActionPerformed
        // TODO add your handling code here:
        carregarInfracoesTabela();
        pnCadastro.removeAll();
        pnCadastro.add(pnCadastroInfracao);
        pnCadastro.repaint();
        pnCadastro.revalidate();
    }// GEN-LAST:event_mmCadastrarInfraçãoActionPerformed

    private void btnAdicionarInfraActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAdicionarInfraActionPerformed
        // TODO add your handling code here:
        try {
            double valor = Double.parseDouble(txtInfraValor.getText());
            String nome = txtInfraNome.getText();
            if (nome.isEmpty() || nome.isBlank()) {
                JOptionPane.showMessageDialog(null, "Não foi possível adicionar a infração.\n"
                        + "Campo nome vazio.",
                        "Erro", JOptionPane.ERROR_MESSAGE);

            } else {
                int flag = JOptionPane.showConfirmDialog(null, "Deseja realmente criar a seguinte infração?\n"
                        + "Infração: " + nome + ".\nValor: " + valor + ".",
                        "Completar cadastro", JOptionPane.YES_NO_OPTION);
                if (flag == JOptionPane.YES_OPTION) {
                    ListaInfracoes listaInfracoes = new ListaInfracoes();
                    Infracao infracao = new Infracao(nome, valor);
                    boolean resultado = listaInfracoes.adicionarInfracao(infracao);
                    if (resultado) {
                        JOptionPane.showMessageDialog(null, "Infração cadastrada com sucesso!",
                                "Infração Cadastrada.", JOptionPane.INFORMATION_MESSAGE);
                        limpaCamposInfracao();
                        txtInfraNome.requestFocus();
                        carregarInfracoesTabela();
                    } else {
                        JOptionPane.showMessageDialog(null, "Já existe uma infração com mesmo nome cadastrada!",
                                "Falha ao cadastrar.", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    limpaCamposInfracao();
                    carregarInfracoesTabela();
                    txtInfraNome.requestFocus();
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar a infração.\n"
                    + "Caractere Inválido no campo valor.",
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnAdicionarInfraActionPerformed

    private void btnRemover1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemover1ActionPerformed
        // TODO add your handling code here:
        frmRemoverInfracao frameRemoverInfra = new frmRemoverInfracao();
        frameRemoverInfra.carregaCbBoxesRemoverInfracao();
        frameRemoverInfra.setVisible(true);
    }// GEN-LAST:event_btnRemover1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGeral().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarInfra;
    private javax.swing.JButton btnCadastrarMorador;
    private javax.swing.JButton btnCadastrarMulta;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarMorador;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnRemover1;
    private javax.swing.JButton btnRemoverAdm;
    private javax.swing.JButton btnRemoverMorador;
    private javax.swing.JComboBox<String> cbApartamento;
    private javax.swing.JComboBox<String> cbBloco;
    private javax.swing.JComboBox<String> cbInfracao;
    private javax.swing.JComboBox<String> cbMoradores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblApartamento;
    private javax.swing.JLabel lblBemVindo;
    private javax.swing.JLabel lblBloco;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCadastroAdiministrador;
    private javax.swing.JLabel lblCadastroInfra;
    private javax.swing.JLabel lblCadastroMorador;
    private javax.swing.JLabel lblCadastroMulta;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblIconBemVindo;
    private javax.swing.JLabel lblInfraNome;
    private javax.swing.JLabel lblInfraValor;
    private javax.swing.JLabel lblInfracao;
    private javax.swing.JLabel lblMorador;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblTabelaMultas;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblValorMulta;
    private javax.swing.JMenu mCadastros;
    private javax.swing.JMenu mGereInfra;
    private javax.swing.JMenu mInicio;
    private javax.swing.JMenu mSair;
    private javax.swing.JMenuBar menubarMenu;
    private javax.swing.JMenuItem mmCadastrarInfração;
    private javax.swing.JMenuItem mmCadastrarMulta;
    private javax.swing.JMenuItem mmCadastroAdministrador;
    private javax.swing.JMenuItem mmCadastroMorador;
    private javax.swing.JMenuItem mmTabelaMultas;
    private javax.swing.JPasswordField pasSenha;
    private javax.swing.JPanel pnCadastro;
    private javax.swing.JPanel pnCadastroAdm;
    private javax.swing.JPanel pnCadastroInfracao;
    private javax.swing.JPanel pnCadastroMorador;
    private javax.swing.JPanel pnCadastroMulta;
    private javax.swing.JPanel pnFormAdm;
    private javax.swing.JPanel pnFormInfra;
    private javax.swing.JPanel pnFormInfraFields;
    private javax.swing.JPanel pnFormInicio;
    private javax.swing.JPanel pnFormMorador;
    private javax.swing.JPanel pnFormMulta;
    private javax.swing.JPanel pnInicio;
    private javax.swing.JPanel pnMultaTabelaForm;
    private javax.swing.JPanel pnTabelaMultas;
    private javax.swing.JTable tbInfracao;
    private javax.swing.JTable tbMultas;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtInfraNome;
    private javax.swing.JTextField txtInfraValor;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JFormattedTextField txtfData;
    // End of variables declaration//GEN-END:variables
}
